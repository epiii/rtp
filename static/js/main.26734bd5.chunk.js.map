{"version":3,"sources":["Nav.js","pages/MyPokemonList.js","components/PokemonList.js","components/Pagination.js","pages/WildPokemonList.js","components/PokemonMoves.js","components/PokemonTypes.js","pages/WildPokemonDetail.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Content","Footer","Nav","style","position","zIndex","width","theme","mode","defaultSelectedKeys","lineHeight","Item","key","to","type","MyPokemonList","useState","pokedex","setPokedex","wildPokemon","setWildPokemon","useEffect","encounterWildPokemon","urlx","min","Math","ceil","max","floor","random","pokeId","axios","get","then","res","console","log","data","imgPath","className","src","id","name","onClick","pokemon","state","filter","p","length","sort","a","b","map","Meta","Card","PokemonList","loading","url","split","avatar","paragraph","hoverable","cover","alt","title","description","Pagination","goToNextPage","goToPrevPage","WildPokemonList","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","setLoading","cancel","cancelToken","CancelToken","c","next","previous","results","justify","align","PokemonMoves","moves","move","PokemonTypes","types","WildPokemonDetail","match","hasCaught","setHasCaught","setPokemonDex","pokemonTypes","setPokemonTypes","pokemonMoves","setPokemonMoves","loading2","setLoading2","modalText","setModalText","visible","setVisible","confirmLoading","setConfirmLoading","fetchItem","params","setPokemonName","prompt","spinning","delay","prob","setTimeout","alert","catchPokemon","message","showIcon","onOk","onCancel","onSubmit","prefix","color","placeholder","App","padding","marginTop","margin","background","minHeight","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.26734bd5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Menu, Icon, Layout, Breadcrumb } from 'antd';\r\nimport Title from 'antd/lib/skeleton/Title';\r\n\r\n// const { SubMenu } = Menu;\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction Nav() {\r\n    const navStyle = {\r\n        color: 'white'\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        console.log('click ', e);\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n    };\r\n\r\n    return (\r\n        // <nav>\r\n        //     <h1>Logo</h1>\r\n        //     <ul className=\"nav-links\">\r\n        //         <Link style={navStyle} to=\"/wild-pokemon-list\">\r\n        //             <li >List</li>\r\n        //         </Link>\r\n        //         <Link style={navStyle} to=\"/my-pokemon-list\">\r\n        //             <li>My List</li>\r\n        //         </Link>\r\n        //     </ul>\r\n        // </nav>\r\n\r\n        <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n            {/* <div className=\"logo\" /> */}\r\n            {/* <Title level={3}>PokeNyamm</Title> */}\r\n            \r\n            <Menu\r\n                theme=\"dark\"\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={['all']}\r\n                style={{ lineHeight: '64px' }}\r\n                mode=\"horizontal\"\r\n            // onClick={handleClick}\r\n            // selectedKeys={[this.state.current]}\r\n            >\r\n                <Menu.Item key=\"all\">\r\n                    <Link to=\"/rtp/wild-pokemon-list\">\r\n                        <Icon type=\"appstore\" />\r\n                        All\r\n                </Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"alipay\">\r\n                    <Link to=\"/rtp/my-pokemon-list\">\r\n                        <Icon type=\"mail\" />\r\n                        My Collection\r\n                </Link>\r\n                </Menu.Item>\r\n\r\n                {/* <Menu.Item key=\"mail\">\r\n                <Icon type=\"mail\" />\r\n                All\r\n            </Menu.Item> */}\r\n                {/* <Menu.Item key=\"app\" disabled>\r\n                <Icon type=\"appstore\" />\r\n                Navigation Two\r\n            </Menu.Item> */}\r\n\r\n                {/* <Menu.Item key=\"alipay\">\r\n                <a href=\"https://ant.design\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    Navigation Four - Link\r\n                </a>\r\n            </Menu.Item> */}\r\n\r\n            </Menu>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState, useEffect } from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport axios from 'axios';\r\n\r\nfunction MyPokemonList() {\r\n\r\n    const [pokedex, setPokedex] = useState([])\r\n    const [wildPokemon, setWildPokemon] = useState({})\r\n\r\n    useEffect(() => {\r\n        encounterWildPokemon()\r\n    }, [])\r\n\r\n    const pokeId = () => {\r\n        const min = Math.ceil(1)\r\n        const max = Math.floor(151)\r\n        return Math.floor(Math.random() * (max - min + 1)) + min\r\n    }\r\n\r\n    const catchPokemon = (pokemon) => {\r\n        setPokedex(state => {\r\n            const monExists = (state.filter(p => pokemon.id == p.id).length > 0)\r\n\r\n            if (!monExists) {\r\n                state = [...state, pokemon]\r\n                state.sort(function (a, b) {\r\n                    return a.id - b.id\r\n                })\r\n            }\r\n            return state\r\n        })\r\n        encounterWildPokemon()\r\n    }\r\n\r\n    const encounterWildPokemon = () => {\r\n        const urlx = 'https://pokeapi.co/api/v2/pokemon/' + pokeId()\r\n        axios.get(urlx)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setWildPokemon(res.data)\r\n            })\r\n    }\r\n\r\n    const removePokemon = (id) => {\r\n        setPokedex(state => state.filter(p => p.id != id))\r\n    }\r\n\r\n    let imgPath = 'https://raw.githubusercontent.com/PokeApi/sprites/master/sprites/pokemon/'\r\n    // let imgPath = 'https://pokeapi.co/api/v2/pokemon/132/encounters'\r\n    return (\r\n        <div className=\"app-wrapper\" >\r\n            <header>\r\n                <h1 className=\"title\">My Pokemon List</h1>\r\n                {/* <h3 className=\"subTitle\">pokemon kocheng app</h3> */}\r\n            </header>\r\n\r\n            <section className=\"wild-pokemon\">\r\n                <h2>wild encounter</h2>\r\n                <img src={imgPath + wildPokemon.id + '.png'} className=\"sprite\"></img>\r\n                <h3>{wildPokemon.name}</h3>\r\n                <button onClick={() => catchPokemon(wildPokemon)} className=\"catch-btn\">catch</button>\r\n            </section>\r\n\r\n            <section className=\"pokedex\">\r\n                <h2>pokedex</h2>\r\n                <div className=\"pokedex-list\">\r\n                    {\r\n                        pokedex.map(pokemon => (\r\n                            <div className=\"pokemon\" key={pokemon.id}>\r\n                                <img src={imgPath + pokemon.id + '.png'} className=\"sprite\" />\r\n                                <h3 className=\"pokemon-name\">{pokemon.name}</h3>\r\n                                <button onClick={() => removePokemon(pokemon.id)} className=\"remove\">x</button>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPokemonList\r\n// ReactDOM.render(<App />, document.getElementById('root'));","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Skeleton, Card } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function PokemonList({ pokemon, loading }) {\r\n    console.log(pokemon)\r\n    let imgPath = 'https://raw.githubusercontent.com/PokeApi/sprites/master/sprites/pokemon/'\r\n\r\n    return (\r\n        // <div>{\r\n        pokemon.map(p => {\r\n            let urlx = p.url.split('/')\r\n\r\n            if (loading) {\r\n                return (\r\n                    <Skeleton loading={loading} avatar={'circle'} paragraph={true} />\r\n                )\r\n            } else {\r\n                return (\r\n                    <Link key={p.name} to={`/rtp/wild-pokemon-detail/${urlx[6]}`}>\r\n                        <Card\r\n\r\n                            hoverable\r\n                            style={{ width: 240 }}\r\n                            cover={<img alt=\"example\" src={imgPath + urlx[6] + '.png'} />}\r\n                        >\r\n                            <Meta title={p.name} description={''} />\r\n                        </Card>\r\n                    </Link>\r\n                )\r\n            }\r\n        })\r\n        // }</div>\r\n\r\n        // <Card\r\n        //     hoverable\r\n        //     style={{ width: 240 }}\r\n        //     cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n        // >\r\n        //     <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n        // </Card> \r\n\r\n        // <div>{\r\n        //     pokemon.map(p => {\r\n        //         let urlx = p.url.split('/')\r\n\r\n        //         return (\r\n        //             <Link to={`/wild-pokemon-detail/${urlx[6]}`}>\r\n        //                 <div key={p.id}>\r\n        //                     <img src={imgPath + urlx[6] + '.png'} /><br />\r\n        //                     {p.name}\r\n        //                 </div>\r\n        //             </Link>\r\n        //         )\r\n        //     })\r\n        // }</div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nexport default function Pagination({ goToNextPage, goToPrevPage }) {\r\n    return (\r\n        <div>\r\n            {\r\n                goToPrevPage && <Button type=\"primary\" onClick={goToPrevPage}>Prev</Button>\r\n            }\r\n            &nbsp;\r\n            {\r\n                goToNextPage && <Button type=\"primary\" onClick={goToNextPage}>Next</Button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PokemonList from '../components/PokemonList'\r\nimport axios from 'axios'\r\nimport Pagination from '../components/Pagination'\r\nimport { BackTop, Skeleton, Switch, List, Avatar, Icon, Row, Col, Slider } from 'antd'\r\n\r\nconst urlx = 'https://pokeapi.co/api/v2/pokemon'\r\n\r\nfunction WildPokemonList() {\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [currentPageUrl, setCurrentPageUrl] = useState(urlx)\r\n  const [nextPageUrl, setNextPageUrl] = useState()\r\n  const [prevPageUrl, setPrevPageUrl] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n  // const [pokemon, setPokemon] = useState(['bulbasaur', 'charmender'])\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    axios.get(urlx)\r\n\r\n    let cancel\r\n    axios.get(currentPageUrl, {\r\n      cancelToken: new axios.CancelToken(c => cancel = c)\r\n    })\r\n      .then(res => {\r\n        // console.log(res);\r\n        setLoading(false)\r\n        setNextPageUrl(res.data.next)\r\n        setPrevPageUrl(res.data.previous)\r\n        setPokemon(res.data.results.map(p => p))\r\n        // setPokemon(res.data.results.map(p => p.name))\r\n      })\r\n    return () => cancel()\r\n  }, [currentPageUrl])\r\n\r\n  function goToNextPage() {\r\n    setCurrentPageUrl(nextPageUrl)\r\n  }\r\n\r\n  function goToPrevPage() {\r\n    setCurrentPageUrl(prevPageUrl)\r\n  }\r\n\r\n  // if (loading) return 'loading...'\r\n\r\n  // console.log(pokemon)\r\n  // console.log(pokemon[1].name)\r\n  return (\r\n    <div className=\"app-wrapper\" >\r\n      <header>\r\n        <h1 className=\"title\">Pokemon List</h1>\r\n      </header>\r\n\r\n      <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n        <Pagination\r\n          goToNextPage={nextPageUrl ? goToNextPage : null}\r\n          goToPrevPage={prevPageUrl ? goToPrevPage : null}\r\n        />\r\n      </Row><br />\r\n      {\r\n        // loading ? (\r\n        //   <Skeleton loading={loading} avatar={'circle'} paragraph={false} />\r\n        // ) : (\r\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n          {\r\n            <PokemonList\r\n              loading={loading}\r\n              pokemon={pokemon}\r\n            />\r\n          }\r\n        </Row>\r\n        // )\r\n      }\r\n      <br />\r\n      <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n        <Pagination\r\n          goToNextPage={nextPageUrl ? goToNextPage : null}\r\n          goToPrevPage={prevPageUrl ? goToPrevPage : null}\r\n        />\r\n      </Row>\r\n\r\n      <div>\r\n        <BackTop />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WildPokemonList;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PokemonMoves({ moves }) {\r\n    return (\r\n        <div className=\"pokemon-move\">{\r\n            moves.map(p => (\r\n                <div key={p.move.name}>\r\n                    {p.move.name}\r\n                </div>\r\n            ))\r\n        }</div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PokemonTypes({ types }) {\r\n    // console.log(types)\r\n    return (\r\n        <div className=\"pokemon-type\">{\r\n            types.map(p => (\r\n                <div key={p.type.name}>\r\n                    {p.type.name}\r\n                </div>\r\n            ))\r\n        }</div >\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PokemonList from '../components/PokemonList'\r\nimport axios from 'axios'\r\nimport Pagination from '../components/Pagination'\r\nimport PokemonMoves from '../components/PokemonMoves';\r\nimport PokemonTypes from '../components/PokemonTypes';\r\nimport { Spin, Alert, Modal, Button, Form, Icon, Input, Checkbox } from 'antd'\r\n\r\nfunction WildPokemonDetail({ match }) {\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [hasCaught, setHasCaught] = useState(false)\r\n  const [pokemonDex, setPokemonDex] = useState([])\r\n  const [pokemonTypes, setPokemonTypes] = useState([])\r\n  const [pokemonMoves, setPokemonMoves] = useState([])\r\n  const [currentPageUrl, setCurrentPageUrl] = useState('https://pokeapi.co/api/v2/pokemon/')\r\n  const [nextPageUrl, setNextPageUrl] = useState()\r\n  const [prevPageUrl, setPrevPageUrl] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n  const [loading2, setLoading2] = useState(false)\r\n  // const [pokemon, setPokemon] = useState(['bulbasaur', 'charmender'])\r\n  const [modalText, setModalText] = useState('Confirmation')\r\n  const [visible, setVisible] = useState(false)\r\n  const [confirmLoading, setConfirmLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    fetchItem()\r\n    // console.log(match)\r\n  }, [currentPageUrl])\r\n\r\n  const fetchItem = () => {\r\n    setLoading(true)\r\n    // axios.get('https://pokeapi.co/api/v2/pokemon/' + match.params.id)\r\n    let cancel\r\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${match.params.id}`, {\r\n      // axios.get(currentPageUrl, {\r\n      cancelToken: new axios.CancelToken(c => cancel = c)\r\n    })\r\n      .then(res => {\r\n        // console.log(res);\r\n        setLoading(false)\r\n        setLoading2(false)\r\n        // setNextPageUrl(res.data.next)\r\n        // setPrevPageUrl(res.data.previous)\r\n        setPokemon(res.data)\r\n        setPokemonMoves(res.data.moves)\r\n        setPokemonTypes(res.data.types)\r\n        // setPokemon(res.data.results.map(p => p))\r\n        // setPokemon(res.data.results.map(p => p.name))\r\n      })\r\n    return () => cancel()\r\n  }\r\n\r\n  // function goToNextPage() {\r\n  //   setCurrentPageUrl(nextPageUrl)\r\n  // }\r\n\r\n  // function goToPrevPage() {\r\n  //   setCurrentPageUrl(prevPageUrl)\r\n  // }\r\n\r\n  if (loading) return 'loading...'\r\n\r\n  // console.log(pokemon.moves)\r\n  // console.log(pokemon[1].name)\r\n  let imgPath = 'https://raw.githubusercontent.com/PokeApi/sprites/master/sprites/pokemon/'\r\n\r\n  const catchPokemon = (pokemon) => {\r\n    let prob = Math.random()\r\n    setLoading2(true)\r\n    console.log(prob)\r\n\r\n    setTimeout(function () {\r\n      setLoading2(false)\r\n      if (prob < 0.5) {\r\n        setPokemonDex(state => {\r\n          console.log('before', state)\r\n          const monExists = (state.filter(p => pokemon.id == p.id).length > 0)\r\n\r\n          if (!monExists) {\r\n            state = [...state, pokemon]\r\n            state.sort(function (a, b) {\r\n              return a.id - b.id\r\n            })\r\n          }\r\n          console.log('after', state)\r\n          return state\r\n        })\r\n        setPokemonName()\r\n      } else {\r\n        alert(\"failed :( , try again \");\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  const setPokemonName = () => {\r\n    let name = prompt('you got it ^_^, \\ngive your pokemon a name ', '')\r\n    if (name) setHasCaught(true)\r\n    console.log(name)\r\n  }\r\n\r\n  // const catchPokemon = (pokemon) => {\r\n\r\n  //   setPokemonDex(state => {\r\n  //     const monExists = (state.filter(p => pokemon.id == p.id).length > 0)\r\n  //     console.log(monExists)\r\n\r\n  //     if (!monExists) {\r\n  //       state = [...state, pokemon]\r\n  //       state.sort(function (a, b) {\r\n  //         return a.id - b.id\r\n  //       })\r\n  //     }\r\n  //     return state\r\n  //   })\r\n  // }\r\n  const catchPokemonModal = () => {\r\n    setVisible(true)\r\n    // this.setState({\r\n    //   visible: true,\r\n    // });\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setModalText('The modal will be closed after two seconds')\r\n    setConfirmLoading(true)\r\n\r\n    setTimeout(() => {\r\n      setVisible(false)\r\n      setConfirmLoading(false)\r\n    }, 2000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false)\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-wrapper\" >\r\n      <Spin spinning={loading2} delay={500}>\r\n        <header>\r\n          <h1 className=\"title\">Wild Pokemon Detail</h1>\r\n        </header>\r\n\r\n        <section className=\"wild-pokemon\">\r\n          <img src={imgPath + match.params.id + '.png'} className=\"sprite\"></img>\r\n          <h3>{pokemon.name}</h3>\r\n        </section>\r\n\r\n        <section>\r\n          <div>\r\n            {\r\n              !hasCaught && <Button type=\"primary\" onClick={() => catchPokemon(pokemon)}>\r\n                catch\r\n              </Button>\r\n            }\r\n\r\n            <Button type=\"primary\" onClick={() => catchPokemonModal()}>\r\n              modal\r\n            </Button>\r\n\r\n            <Alert\r\n              message=\"Failed\"\r\n              description=\"Try to catch again, until you get the pokemon ^_^ \"\r\n              type=\"warning\"\r\n              showIcon\r\n            />\r\n\r\n            <Modal\r\n              title=\"Title\"\r\n              visible={visible}\r\n              onOk={() => handleOk()}\r\n              confirmLoading={confirmLoading}\r\n              onCancel={() => handleCancel()}\r\n            >\r\n              <p>{modalText}</p>\r\n              <Form onSubmit={() => alert('haha')} className=\"login-form\">\r\n                <Form.Item>\r\n                  {/* {\r\n                  getFieldDecorator('username', {\r\n                    rules: [{ required: true, message: 'Please input your username!' }],\r\n                  })( */}\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"Username\"\r\n                  />,\r\n                  {/* ) */}\r\n                  }\r\n              </Form.Item>\r\n              </Form>\r\n            </Modal>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"detail-info\">\r\n          <h3>Types</h3>\r\n          <PokemonTypes types={pokemonTypes} />\r\n\r\n          <h3>Moves</h3>\r\n          <PokemonMoves moves={pokemonMoves} />\r\n        </section>\r\n      </Spin>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WildPokemonDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Nav from './Nav'\r\nimport MyPokemonList from './pages/MyPokemonList'\r\nimport WildPokemonList from './pages/WildPokemonList'\r\nimport WildPokemonDetail from './pages/WildPokemonDetail'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport './index.css'\r\n\r\nimport { Layout, Breadcrumb } from 'antd';\r\nconst { Content, Footer } = Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n\r\n        {/* <div className=\"app\"> */}\r\n        <Nav />\r\n\r\n        <Content style={{ padding: '0 50px', marginTop: 64 }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>List</Breadcrumb.Item>\r\n            <Breadcrumb.Item>App</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n\r\n          <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\r\n            <Switch>\r\n              {/* <Route exact path=\"/\" component={Home} /> */}\r\n              <Route exact path=\"/rtp\" component={WildPokemonList} />\r\n              <Route path=\"/rtp/my-pokemon-list\" component={MyPokemonList} />\r\n              <Route path=\"/rtp/wild-pokemon-list\" component={WildPokemonList} />\r\n              <Route path=\"/rtp/wild-pokemon-detail/:id\" component={WildPokemonDetail} />\r\n            </Switch>\r\n          </div>\r\n\r\n        </Content>\r\n\r\n        {/* </div> */}\r\n      </Layout>\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\nserviceWorker.register();\r\n"],"sourceRoot":""}